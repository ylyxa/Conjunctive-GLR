S ::= Expr & AllVarsDecl;pass_through_as_tuple
Expr ::= Redex;pass_through_as_tuple
Expr ::= Lambda;pass_through_as_tuple
Expr ::= lbr NoLambda blank Expr rbr;pass_through_as_tuple
Expr ::= Var;pass_through
NoLambda ::= Var;pass_through_as_tuple
NoLambda ::= Redex;pass_through_as_tuple
NoLambda ::= lbr NoLambda blank Expr rbr;pass_through_as_tuple
Redex ::= lbr Lambda blank Expr rbr;pass_through_as_tuple
Lambda ::= llbr lamsym Var dot Expr rlbr;pass_through_as_tuple
lbr ::= \(
rbr ::= \)
llbr ::= \[
lamsym ::= \\
rlbr ::= \]
dot ::= \->
blank ::= \s
x ::= x
y ::= y
z ::= z
Var ::= x|y|z;pass_through_as_tuple
Delim ::= lbr|rbr|blank|rlbr;pass_through_as_tuple
AllVarsDecl ::= AllVarsDecl Delim;pass_through_as_tuple
AllVarsDecl ::= AllVarsDecl Delim Var & ThisVarDecl;pass_through_as_tuple
AllVarsDecl ::= AllVarsDecl llbr lamsym Var dot Var & ThisVarDecl;pass_through_as_tuple
AllVarsDecl ::= AllVarsDecl llbr lamsym Var dot;pass_through_as_tuple
AllVarsDecl ::= _;pass_through_as_tuple
ThisVarDecl ::= Expr ThisVarDecl;pass_through_as_tuple
ThisVarDecl ::= llbr lamsym x dot All x & InLambda;pass_through_as_tuple
ThisVarDecl ::= llbr lamsym y dot All y & InLambda;pass_through_as_tuple
ThisVarDecl ::= llbr lamsym z dot All z & InLambda;pass_through_as_tuple
InLambda ::= Expr InLambda;pass_through_as_tuple
InLambda ::= lbr InLambda;pass_through_as_tuple
InLambda ::= llbr lamsym Var dot InLambda;pass_through_as_tuple
InLambda ::= blank InLambda;pass_through_as_tuple
InLambda ::= _;pass_through_as_tuple
All ::= All Var;pass_through_as_tuple
All ::= All Delim;pass_through_as_tuple
All ::= llbr lamsym Var dot All;pass_through_as_tuple
All ::= Delim;pass_through_as_tuple
All ::= Var;pass_through_as_tuple
All ::= _;pass_through_as_tuple